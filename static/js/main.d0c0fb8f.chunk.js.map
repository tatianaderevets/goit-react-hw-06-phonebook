{"version":3,"sources":["redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reduсer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","Form","state","nameInputId","handleChange","event","currentTarget","value","setState","handleSubmit","props","contacts","onSubmit","preventDefault","find","contact","alert","reset","this","htmlFor","type","onChange","pattern","title","required","Component","connect","items","dispatch","contactsActions","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","onDeleteContacts","map","onClick","e","target","App","createReducer","actions","action","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d0c0fb8f.chunk.js","sourcesContent":["import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nconst addContact = createAction('contacts/add', ({name, number}) => ({\r\n   payload:  {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n    \r\n        \r\n    }\r\n}));\r\n\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n\r\n\r\nexport default { addContact, deleteContact, changeFilter };","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\n\r\n\r\n\r\nclass Form extends Component {\r\n\r\n    static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n  }\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    nameInputId = shortid.generate();\r\n\r\n    handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    // console.log(event.currentTarget);\r\n    // console.log(event.currentTarget.name);\r\n    // console.log(event.currentTarget.value);\r\n    this.setState({[name]: value});\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        const { contacts, onSubmit } = this.props;\r\n        const { name, number } = this.state;\r\n        \r\n        event.preventDefault();\r\n        // console.log(this.state);\r\n        contacts.find((contact) => contact.name === name)\r\n      ? alert(`This person ${name} is already in contacts`)\r\n      : contacts.find((contact) => contact.number === number)\r\n      ? alert(`This number ${number} is already in contacts`)\r\n      : onSubmit(this.state);\r\n        // this.props.onSubmit(this.state);\r\n        this.reset();\r\n\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n        \r\n      <input\r\n        type=\"text\"\r\n        value={this.state.name} onChange={this.handleChange}\r\n        name=\"name\"\r\n        id={this.nameInputId}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        \r\n        />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            \r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n  required\r\n/>\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) =>{\r\n        return dispatch(contactsActions.addContact(name, number))\r\n    },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContacts }) => (\r\n    \r\n    <ul>{contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n            <p>{name}:{number}</p>\r\n            <button onClick={() => onDeleteContacts(id)}>Delete</button>\r\n        </li>\r\n    ))}\r\n            \r\n    </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContacts: PropTypes.func.isRequired\r\n}\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n  }\r\n\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n    contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>( {\r\nonDeleteContacts: (id) => dispatch(contactsActions.deleteContact(id)),\r\n})\r\n \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(ContactsList);","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <label>\r\n        Find contact by name <br />\r\n        <input type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n);\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\nvalue: state.contacts.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","// import './App.css';\n\nimport { Component } from \"react\";\nimport Form from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactsList\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n\n  state = {\n    \n  };\nrender() {\n    \n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form />\n      \n        <h2>Contacts</h2>\n        <Filter/>\n        \n        <ContactsList />\n        \n      </div>\n\n    );\n  }\n}\n\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions'\r\n\r\nconst items = createReducer(\r\n    [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    {\r\n        [actions.addContact]: (state, action) => [...state, action.payload],\r\n        [actions.deleteContact]: (state, action) =>\r\n            state.filter(contact => contact.id !== action.payload),\r\n    }\r\n);\r\n\r\n\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, action) => action.payload,\r\n})\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport contactsReducer from './contacts/contacts-reduсer';\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: [\"filter\"],\r\n};\r\n\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n         \r\n    serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    \r\n    }),\r\nlogger\r\n];\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer)\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n\r\n});\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default {store, persistor};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= {store.store}>\n  <PersistGate loading = {null} persistor = {store.persistor}>\n    \n      <App />\n      </PersistGate>\n </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}